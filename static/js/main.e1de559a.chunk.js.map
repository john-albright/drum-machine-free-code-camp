{"version":3,"sources":["index.js"],"names":["ON","OFF","initialState","power","store","createStore","state","action","type","subscribe","console","log","getState","drumBank","keyCode","keyTrigger","id","url","activeStyle","backgroundColor","borderColor","transform","inactiveStyle","Drum","props","drumStyle","handleKeyPress","bind","emitSound","activatePad","document","addEventListener","this","e","powerOnOff","setState","sound","getElementById","currentTime","playPromise","play","updateDisplay","setTimeout","undefined","then","catch","error","className","onClick","style","src","audioLink","React","Component","App","displayText","displayClipName","turnOnOff","name","powerStatus","powerOff","powerOn","drumPads","map","currentDict","i","array","Container","connect","dispatch","ReactDOM","render"],"mappings":"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","file":"static/js/main.e1de559a.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider, connect } from 'react-redux';\nimport { createStore } from 'redux';\nimport './index.css';\n\n// REDUX CODE -----------------------------------------\n\nconst ON = 'ON';\nconst OFF = 'OFF';\n\n// Actions \nconst powerOn = () => {\n    return {\n        type: ON\n    };\n}\n\nconst powerOff = () => {\n    return {\n        type: OFF\n    };\n}\n\n// Initial state to be used as a default argument in the reducer\nconst initialState = {\n    power: true\n};\n\n//Reducer\nconst powerReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case ON:\n            return {\n                power: true\n            };\n        case OFF:\n            return {\n                power: false\n            }\n        default:\n            return state; \n    }\n}\n\n// Create store \nconst store = createStore(powerReducer);\n\nstore.subscribe(() => console.log(store.getState())); // log the changes in the Redux state to the console \n\n// REACT CODE -----------------------------------------\n\n// Information for all 9 drum pads \nconst drumBank = [\n    {\n        keyCode: 81,\n        keyTrigger: 'Q',\n        id: 'Clap',\n        url: 'sounds/808_6_Clap.wav'\n    },\n    {\n        keyCode: 87,\n        keyTrigger: 'W',\n        id: 'High Pitch',\n        url: 'sounds/808_5_High_Pitch.wav'\n    },\n    {\n        keyCode: 69,\n        keyTrigger: 'E',\n        id: 'Kick 1',\n        url: 'sounds/808_K_kick.wav'\n    },\n    {\n        keyCode: 65,\n        keyTrigger: 'A',\n        id: 'Snare 1',\n        url: 'sounds/909CX_40_SN2_6.wav'\n    },\n    {\n        keyCode: 83,\n        keyTrigger: 'S',\n        id: 'Ride Cymbal',\n        url: 'sounds/909CX_59_RD2_8.wav'\n    },\n    {\n        keyCode: 68,\n        keyTrigger: 'D',\n        id: 'Snare 2',\n        url: 'sounds/Alchemist_Snare_9.wav'\n    },\n    {\n        keyCode: 90,\n        keyTrigger: 'Z',\n        id: 'Shaker',\n        url: 'sounds/Alchemist_Shaker_1.wav'\n    },\n    {\n        keyCode: 88,\n        keyTrigger: 'X',\n        id: 'Cymbal Crash',\n        url: 'sounds/808_4_Cymbal_Crash.wav'\n    },\n    {\n        keyCode: 67,\n        keyTrigger: 'C',\n        id: 'Hi Hat',\n        url: 'sounds/Alchemist_HiHat_8.wav'\n    }\n];\n\n// Styles for drum (when played versus when not played)\nconst activeStyle = {\n    backgroundColor: 'blue',\n    borderColor: 'black',\n    transform: 'scale(1.1)'\n};\n\nconst inactiveStyle = {\n    backgroundColor: 'transparent'\n};\n\n// Individual drum component\nclass Drum extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            drumStyle: inactiveStyle\n        }\n\n        this.handleKeyPress = this.handleKeyPress.bind(this);\n        this.emitSound = this.emitSound.bind(this);\n        this.activatePad = this.activatePad.bind(this);\n    }\n\n    componentDidMount() {\n        document.addEventListener('keydown', this.handleKeyPress);\n    }\n\n    handleKeyPress(e) {\n        if (this.props.powerOnOff && e.keyCode === this.props.keyCode) {\n            this.emitSound();\n        }\n    }\n\n    activatePad() {\n        if (this.props.powerOnOff) {\n            if (this.state.drumStyle.backgroundColor !== 'blue') {\n                this.setState({\n                    drumStyle: activeStyle\n                });\n            } else {\n                this.setState({\n                    drumStyle: inactiveStyle\n                });\n            }\n        }\n    }\n\n    emitSound() {\n        if (this.props.powerOnOff) {\n            const sound = document.getElementById(this.props.keyTrigger);\n            //const url = sound.src;\n            console.log(sound);\n    \n            //sound.load(); \n            sound.currentTime = 0; // allows audio to be interrupted\n            var playPromise = sound.play();\n    \n            this.props.updateDisplay(this.props.id);\n            setTimeout(() => this.activatePad(), 100);\n            setTimeout(() => this.activatePad(), 300);\n    \n            if (playPromise !== undefined) {\n                playPromise.then(function() {\n                    console.log(`Playing ${sound}`);\n                }).catch(function(error) {\n                    console.error(error);\n                });\n            }\n        }\n    }\n\n    render() {\n        return(\n            <div\n                className = \"drum-pad\"\n                id = {this.props.id}\n                onClick = {this.emitSound}\n                style = {this.state.drumStyle}\n                >\n                <audio\n                    className = \"clip\"\n                    id = {this.props.keyTrigger}\n                    src = {this.props.audioLink}\n                />\n                {this.props.keyTrigger}\n            </div>\n        );\n    }\n}\n\n// Wrap the power button in a container??\n/* class PowerButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.pressPower = this.pressPower.bind(this);\n    }\n\n    pressPower() {\n        if (!this.props.powerOnOff) {\n            this.props.powerOn();\n        } else {\n            this.props.powerOff();\n        }\n    }\n\n    render() {\n        return(\n            <div id=\"power\" onClick={this.pressPower}>\n                POWER\n            </div>\n        );\n    }\n}*/\n\nclass App extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        displayText: ''\n        //power: false\n      };\n\n      this.displayClipName = this.displayClipName.bind(this);\n      this.turnOnOff = this.turnOnOff.bind(this);\n    }\n\n    displayClipName(name) {\n        this.setState({\n            displayText: name\n        });\n    }\n\n    \n    turnOnOff() {\n        console.log(this.props.powerStatus);\n        if (!this.props.powerStatus) {\n            this.props.powerOn();\n            this.setState({\n                displayText: 'On'\n                //power: true\n            });\n        } else {\n            this.props.powerOff();\n            this.setState({\n                displayText: 'Off'\n                //power: false\n            });\n        }\n    }\n\n    render() {\n      const drumPads = drumBank.map((currentDict, i, array) => {\n        return <Drum \n            key = {array[i]['keyCode']}\n            className = \"drum-pad\"\n            id = {array[i]['id']}\n            audioLink = {array[i]['url']}\n            keyTrigger = {array[i]['keyTrigger']}\n            keyCode = {array[i]['keyCode']}\n            updateDisplay = {this.displayClipName}\n            powerOnOff = {this.props.powerStatus}\n        />;\n      });\n      \n      return(\n        <div id=\"drum-machine\">\n            <div id=\"main\">\n                <div id=\"display\">{this.state.displayText}</div>\n                { drumPads }\n            </div>\n            <div id=\"menu\">\n                <div id=\"power\" onClick={this.turnOnOff}>\n                    POWER\n                </div>\n                {/*<PowerButton powerOnOff = {this.props.powerStatus} />*/}\n            </div>\n        </div>\n      );\n    }\n    \n}\n\n// Connect Redux and React\n\nconst mapStateToProps = (state) => {\n    return {\n        powerStatus: state.power\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        powerOn: () => dispatch(powerOn()),\n        powerOff: () => dispatch(powerOff())\n    };\n}\n\n//store.dispatch(powerOn());\n//store.dispatch(powerOff());\n\nconst Container = connect(mapStateToProps, mapDispatchToProps)(App);\n//const PowerButton2 = connect(mapStateToProps, mapDispatchToProps)(PowerButton);\n\n// Render application\nReactDOM.render(\n    <Provider store={store}>\n        <Container />\n    </Provider>, \n    document.getElementById('root')\n);"],"sourceRoot":""}